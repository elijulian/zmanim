name: Bump version and deploy

on:
  push:
    branches:
      - test-merge

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with: # running setup-java again overwrites the settings.xml
          distribution: corretto
          java-version: 8
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: ${{ secrets.OSSRH_USERNAME }} # env variable for username in deploy
          server-password: ${{ secrets.OSSRH_TOKEN }} # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }} # env variable for GPG private key passphrase

      - name: Bump patch version in pom.xml
        if: contains(github.event.head_commit.message, '#patch')
        run: |
          # Update the patch version in pom.xml
          mvn validate -DbumpPatch
      - name: Bump minor version in pom.xml
        if: contains(github.event.head_commit.message, '#minor')
        run: |
          # Update the minor version in pom.xml
          ls -lart
          mvn validate -DbumpMinor
      - name: Bump major version in pom.xml
        if: contains(github.event.head_commit.message, '#major')
        run: |
          # Update the major version in pom.xml
          mvn validate -DbumpMajor

      - name: Commit and push changes
        if: contains(github.event.head_commit.message, '#major') || contains(github.event.head_commit.message, '#minor') || contains(github.event.head_commit.message, '#patch')
        run: |
          # Use the secrets stored in the GITHUB_TOKEN and GITHUB_USERNAME
          # secrets to configure the git credentials
          git config --local user.email "${{ secrets.GITHUB_USERNAME }}"
          git config --local user.name "${{ secrets.GITHUB_TOKEN }}"
          git add pom.xml
          git commit -m "Bump version in pom.xml"
          git push

      - name: Get version from pom.xml
        run: |
          # Extract the version number from pom.xml
          version=$(grep -Eo '[0-9]*\.[0-9]*\.[0-9]*' pom.xml | head -1)
          echo version
          cat $HOME/.m2/settings.xml

      - name: Deploy to server
        # Add your deployment commands here
        run: |
          # Use the version number from the pom.xml file
          mvn deploy -DskipTests -Dversion=$version